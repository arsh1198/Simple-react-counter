{"version":3,"sources":["App.js","reportWebVitals.js","theme.js","index.js"],"names":["App","useState","counter","setCounter","useColorMode","colorMode","setColorMode","checked","className","sx","backgroundColor","onChange","uncheckedIcon","size","style","marginTop","marginLeft","checkedIcon","offColor","onColor","onHandleColor","offHandleColor","handleDiameter","color","onClick","paddingTop","outline","height","width","borderRadius","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","colors","background","card","text","border","button","modes","dark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA2EeA,MAjEf,WAAgB,IAAD,EACiBC,mBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEqBC,cAFrB,mBAENC,EAFM,KAEKC,EAFL,KAGPC,EAAwB,SAAdF,EAChB,OACE,mBAAKG,UAAU,YAAYC,GAAI,CAAEC,gBAAiB,eAChD,mBAAKF,UAAU,UACb,YAAC,IAAD,CACEG,SAAU,kBACRL,EAA2B,YAAdD,EAA0B,OAAS,YAElDE,QAASA,EACTK,cACE,YAAC,IAAD,CAAQC,KAAM,GAAIC,MAAO,CAAEC,UAAW,EAAGC,WAAY,KAEvDC,YACE,YAAC,IAAD,CAAWJ,KAAM,GAAIC,MAAO,CAAEC,UAAW,EAAGC,WAAY,KAE1DE,SAAS,UACTC,QAAQ,UACRC,cAAc,OACdC,eAAe,OACfC,eAAgB,MAGpB,iBAAGd,UAAU,QAAQC,GAAI,CAAEc,MAAO,SAAlC,WAGA,mBAAKf,UAAU,YAAYC,GAAI,CAAEC,gBAAiB,SAChD,sBACED,GAAI,CAAEC,gBAAiB,UACvBF,UAAU,SACVgB,QAAS,kBAAMrB,EAAWD,EAAU,KAHtC,KAOA,sBAAKA,GACL,sBACEO,GAAI,CACFC,gBAAiB,UAEnBF,UAAU,SACVgB,QAAS,kBAAMrB,EAAWD,EAAU,KALtC,MAUF,sBACEsB,QAAS,kBAAMrB,EAAW,IAC1BK,UAAU,QACVC,GAAI,CACFgB,WAAY,EACZC,QAAS,OACTC,OAAQ,GACRC,MAAO,GACPlB,gBAAiB,SACjBmB,aAAc,KAGhB,YAAC,IAAD,CAAchB,KAAM,QCzDbiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCWCQ,EAlBD,CACZC,OAAQ,CACNC,WAAY,UACZC,KAAM,UACNC,KAAM,OACNC,OAAQ,OACRC,OAAQ,OACRC,MAAO,CACLC,KAAM,CACJN,WAAY,UACZC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,OAAQ,cCLhBG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAeX,MAAOA,GACpB,kBAAC,EAAD,QAGJY,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.0a13a4d9.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { Button, jsx } from \"theme-ui\";\nimport { useState } from \"react\";\nimport { useColorMode } from \"theme-ui\";\nimport Switch from \"react-switch\";\nimport { GiMoon } from \"react-icons/gi\";\nimport { RiSunFill } from \"react-icons/ri\";\nimport { GrPowerReset } from \"react-icons/gr\";\nimport \"./App.css\";\n\nfunction App() {\n  const [counter, setCounter] = useState(0);\n  const [colorMode, setColorMode] = useColorMode();\n  const checked = colorMode === \"dark\" ? true : false;\n  return (\n    <div className=\"container\" sx={{ backgroundColor: \"background\" }}>\n      <div className=\"switch\">\n        <Switch\n          onChange={() =>\n            setColorMode(colorMode === \"default\" ? \"dark\" : \"default\")\n          }\n          checked={checked}\n          uncheckedIcon={\n            <GiMoon size={20} style={{ marginTop: 4, marginLeft: 6 }} />\n          }\n          checkedIcon={\n            <RiSunFill size={20} style={{ marginTop: 4, marginLeft: 4 }} />\n          }\n          offColor=\"#ffc0cb\"\n          onColor=\"#610035\"\n          onHandleColor=\"#fff\"\n          offHandleColor=\"#000\"\n          handleDiameter={20}\n        />\n      </div>\n      <p className=\"title\" sx={{ color: \"text\" }}>\n        Counter\n      </p>\n      <div className=\"inner-div\" sx={{ backgroundColor: \"card\" }}>\n        <button\n          sx={{ backgroundColor: \"button\" }}\n          className=\"button\"\n          onClick={() => setCounter(counter + 1)}\n        >\n          +\n        </button>\n        <h1>{counter}</h1>\n        <button\n          sx={{\n            backgroundColor: \"button\",\n          }}\n          className=\"button\"\n          onClick={() => setCounter(counter - 1)}\n        >\n          -\n        </button>\n      </div>\n      <button\n        onClick={() => setCounter(0)}\n        className=\"reset\"\n        sx={{\n          paddingTop: 1,\n          outline: \"none\",\n          height: 55,\n          width: 55,\n          backgroundColor: \"button\",\n          borderRadius: 50,\n        }}\n      >\n        <GrPowerReset size={30} />\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const theme = {\r\n  colors: {\r\n    background: \"#add8e6\",\r\n    card: \"#ffc0cb\",\r\n    text: \"#000\",\r\n    border: \"#000\",\r\n    button: \"#fff\",\r\n    modes: {\r\n      dark: {\r\n        background: \"#003c4f\",\r\n        card: \"#610035\",\r\n        text: \"#f1f1f1\",\r\n        border: \"#f1f1f1\",\r\n        button: \"#ffc0cb\",\r\n      },\r\n    },\r\n  },\r\n};\r\nexport default theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"theme-ui\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}